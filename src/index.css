body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

:root {
  --dark-gray: #282c34;
  --medium-gray: #807882;
  --light-gray: #b8b0b8;
  --medium-blue: #7870a2;
  --dark-blue: #586088;
  --medium-red: #a27070;
}

body {
  background-color: var(--dark-gray);
  color: var(--light-gray);
  height: 100vh;
}

a {
  color: var(--medium-blue);
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

a:visited {
  color: var(--dark-blue);
}

ul {
  display: flex;
}

li {
  list-style: none;
}

button,
select,
textarea,
input {
  font-size: inherit;
  font-family: inherit;
  border: none;
  border-radius: calc(2px + 1vmin);
  margin: 1px;
  padding: calc(2px + 1vmin);
  cursor: pointer;
}

.textButton {
  border-radius: 0;
  background: transparent;
  color: var(--light-gray);
}

.selectedTextButton {
  cursor: default;
  border-bottom: medium var(--light-gray) dotted;
}

.floatRight {
  float: right;
}

.App {
  font-size: calc(5px + 1vmin);
  padding: 10px;
  margin: 0;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  height: 100vh;
  width: 100vw;
}

.landing {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  align-items: center;
  justify-content: center;
  gap: 10vmin;
  font-size: calc(15px + 1.5vmin);
}

.navigation {
  font-size: calc(10px + 0.8vmin);
  align-items: center;
  flex-wrap: wrap;
  gap: 5px;
  margin: 10px;
}

.pushRight {
  margin-left: auto;
}

.icon {
  fill: var(--light-gray);
  background: transparent;
  vertical-align: baseline;
  aspect-ratio: 1;
  min-height: 2em;
  margin: 0;
  padding: 0;
}

footer {
  font-size: calc(15px + 0.5vmin);
}

.generatorContent {
  display: flex;
  height: 100%;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.configDropZone {
  display: flex;
  height: 100vh;
  width: 100vw;
  align-items: center;
  justify-content: center;
}

.fileInput {
  display: none;
}

.generatorLine {
  font-size: calc(10px + 2vmin);
}

.reroll {
  min-height: 4em;
}

randomItem {
  background-color: var(--light-gray);
  color: var(--dark-gray);
  cursor: pointer;
}

.flexRow {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: stretch;
  gap: 10px;
}

.editorContent {
  height: 100%;
  flex-wrap: wrap;
  align-items: stretch;
  align-content: flex-start;
  margin: 20px 20px 20px 0;
  gap: 40px;
  font-size: calc(10px + 1.5vmin);
}

.editorItem {
  cursor: text;
  flex-grow: 1;
}

.editorMetadata {
  align-items: flex-start;
  width: 100%;
  flex-wrap: wrap;
}

.editorDescription {
  flex-grow: 2;
}

.minTextareaHeight {
  /* We really want lh units here but it's not widely enough supported yet. */
  flex-basis: 6em;
}

.editorGenerator {
  display: flex;
  flex-direction: column;
  flex-grow: 3;
  gap: 10px;
}

.editorTable {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  flex-grow: 1;
  gap: 10px;
}

.editorSelect {
  flex-grow: 1;
  cursor: default;
}

.editorRenameInput {
  flex-grow: 10;
}

.editorPreview {
  display: flex;
  flex-grow: 1;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 40px;
  margin-top: 40px;
  padding: 20px 20px 50px 20px;
  border: medium var(--light-gray) dashed;
  border-radius: calc(2px + 1vmin);
}